Source: piqi
Section: devel
Priority: optional
Maintainer: Motiejus Jak≈°tys <desired.mta@gmail.com>
Build-Depends: debhelper (>= 8.0.0), camlp4-extra (>= 3.12), ocaml-findlib,
    libprotoc-dev, protobuf-compiler, pandoc
Standards-Version: 3.9.3
Homepage: http://piqi.org

Package: piqi
Architecture: any
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Universal schema language for JSON, XML, Protocol Buffers
 Piqi is a universal schema language and a collection of tools built
 around it.
 .
 The Piqi language can be used to define schemas for JSON, XML, Google
 Protocol Buffers and some other data formats.
 .
 This package includes "piqi" command-line program that exposes some
 of the tools:
 .
 - for validating, pretty-printing and converting data between JSON,
   XML, Protocol Buffers and Piq formats.
 .
 - for working with the schemas, such as converting definitions between
   Piqi (.piqi) and Protocol Buffes (.proto), and "compiling" Piqi
   definitions into one of the supported portable data representation
   formats (JSON, XML, Protocol Buffers).
 .
 Other Piqi sub-projects include:
 .
 - A multi-format (JSON, XML, Protocol Buffers) data serialization
   system for Erlang and OCaml.
 .
 - Piq -- a human-friendly typed data representation language. It is
   designed to be more convenient for viewing and editing data compared
   to JSON, XML, CSV, S-expressions and other formats.
 .
 - Piqi-RPC -- an RPC-over-HTTP system for Erlang. It provides a simple
   way to expose Erlang services via JSON, XML and Protocol Buffers
   over HTTP.
 .
 The Piqi project was inspired by Google Protocol Buffers and designed to
 be largely compatible with it. Like Protocol Buffers, Piqi relies on
 type definitions and supports schema evolution. The main differences is
 that Piqi has a richer data model, high-level modules, standard mappings
 to JSON and XML, and comes with a powerful data representation format
 (Piq). Also, Piqi is a lot more extensible.
